@using WorkflowDiagram.UI.Blazor.Editors

<ButtonEdit EditValue="@Code">
    <Buttons>
        <ButtonEditButton Click="OnShowModalPopupClick" Glyph="data:image/svg+xml,%3Csvg version='1.1' id='Capa_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 32.055 32.055' style='enable-background:new 0 0 32.055 32.055;' xml:space='preserve'%3E%3Cg%3E%3Cpath d='M3.968,12.061C1.775,12.061,0,13.835,0,16.027c0,2.192,1.773,3.967,3.968,3.967c2.189,0,3.966-1.772,3.966-3.967 C7.934,13.835,6.157,12.061,3.968,12.061z M16.233,12.061c-2.188,0-3.968,1.773-3.968,3.965c0,2.192,1.778,3.967,3.968,3.967 s3.97-1.772,3.97-3.967C20.201,13.835,18.423,12.061,16.233,12.061z M28.09,12.061c-2.192,0-3.969,1.774-3.969,3.967 c0,2.19,1.774,3.965,3.969,3.965c2.188,0,3.965-1.772,3.965-3.965S30.278,12.061,28.09,12.061z'/%3E%3C/g%3E%3C/svg%3E"></ButtonEditButton>
    </Buttons>
</ButtonEdit>

<CascadingValue Value="popupComponent">
    <PopupView>
        <div class="ee-container">
            <div class="ee-toolbar">
                <div class="form-button green-button" @onclick="OnItemClick">Check For Errors</div>
            </div>
            <DxMemo style="width: 650px; height: 350px;" TextAreaCssClass="ee-memo-textarea" @bind-Text="@Code" ResizeMode="MemoResizeMode.Disabled"></DxMemo>
            <div class="ee-errors-panel">
                <table class="error-table">
                    @for(int i = 0; i < Errors.Count; i++) {
                        if(i % 2 == 0) {
                            <tr class="error-row even">
                                <td class="err-cell"><div class="err-type @Errors[i].Type">@Errors[i].Type</div></td>
                                @*<td class="err-cell">@Errors[i].Location.Line</td>*@
                                <td class="err-cell">@Errors[i].Description</td>
                            </tr>
                        }
                        else {
                            <tr class="error-row odd">
                                <td class="err-cell"><div class="err-type @Errors[i].Type">@Errors[i].Type</div></td>
                                @*<td class="err-cell">@Errors[i].Location.Line</td>*@
                                <td class="err-cell">@Errors[i].Description</td>
                            </tr>
                        }
                    }
                </table>
            </div>
        </div>
    </PopupView>
</CascadingValue>

<CascadingValue Value="@messageBox">
    <PopupView>
        <div class="message-box">
            @this.message
        </div>
    </PopupView>
</CascadingValue>


@code {
    private PopupComponent popupComponent;
    private PopupComponent messageBox;
    private string message;
    protected override void OnInitialized() {
        base.OnInitialized();
        this.popupComponent = new PopupComponent() { Title = "Value Editor", ShowCloseButton=true };
        this.popupComponent.OnOk += OnPopupOkClick;

        this.messageBox = new PopupComponent() { ShowCloseButton = true };
    }

    void OnPopupOkClick(object sender, EventArgs e) {
        View.Item.Value.Row.SetValue(Code);
    }

    void OnShowModalPopupClick(ButtonEditButton button) {
        this.popupComponent.ShowPopup();
    }
    void OnItemClick(MouseEventArgs e) {
        CheckIsExpressionValid();
    }
}